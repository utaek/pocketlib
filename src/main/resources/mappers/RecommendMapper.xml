<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RecommendMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="bookMap"
		type="pocketLib.spring.pocketLibSpring.mybatis.model.Book">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="isbn" column="isbn" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="description" column="description" />
		<result property="pubDate" column="pubDate" />
		<result property="priceSales" column="priceSales" />
		<result property="priceStandard" column="priceStandard" />
		<result property="cover" column="cover" />
		<result property="categoryId" column="categoryId" />
		<result property="categoryName" column="categoryName" />
		<result property="publisher" column="publisher" />
		<result property="customerReviewRank" column="customerReviewRank" />
		<result property="count" column="count" />
			<result property="cate" column="cate" />
	
	</resultMap>
	
	<!-- isbn 없으면 insert 하기 데이터 저장을 위한 기능 정의 -->
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="BookReadMap"
		type="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="bRNo" column="bRNo" />
		<result property="userno" column="userno" />
		<result property="isbn" column="isbn" />
		<result property="value" column="value" />
		<result property="reg_date" column="reg_date" />
		<result property="count" column="count" />
		<result property="term" column="term" />
		
		
	</resultMap>

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="BookInterestedMap"
		type="pocketLib.spring.pocketLibSpring.mybatis.model.BookInterested">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="bINo" column="bINo" />
		<result property="userno" column="userno" />
		<result property="isbn" column="isbn" />
		<result property="reg_date" column="reg_date" />
	</resultMap>
	
	<select id="selectList" 
            parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.Book" 
            resultMap="bookMap">
        <!-- 이 안에서 처리할 SQL문을 명시한다. -->
	select count(book.isbn) as count,book.isbn,
		book.title,
		book.author,
		book.description,
		book.pubDate,
		book.publisher,
		book.priceSales,
		book.priceStandard,
		book.cover,
		book.categoryId,
		book.categoryName,
		book.customerReviewRank from (
	(SELECT isbn FROM bookread where month(now()) = month(reg_date))
	UNION ALL
	(SELECT isbn FROM bookinterested where month(now()) = month(reg_date))) bookinterested
	INNER JOIN book ON book.isbn = bookinterested.isbn
	GROUP BY book.isbn
	order by count desc limit 24;
	

    </select>


<!-- 지난 5달의 상위 10개 인기도서 -->
	<select id="selectAllCountbyReg_date"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultMap="bookMap">

		select
		book.isbn,
		book.title,

		count(*) as count
		from bookread
		INNER JOIN book ON book.isbn = bookread.isbn
		where
		date_format(bookread.reg_date, '%Y-%m')=#{reg_date}
		group by
		date_format(bookread.reg_date, '%Y-%m'),bookread.isbn
		order by count
		desc limit 10;


	</select>
	
		<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectRandombyCate"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.Book"
		resultMap="bookMap">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->

		select isbn, cover from book
		where categoryId=#{categoryId} and isbn!=#{isbn}
		order by rand() limit 24;
	</select>


<!-- 상위 하나의 categoryId 뽑기 -->
	<select id="selectTopOne"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultMap="bookMap">
		SELECT
		book.categoryId,
		book.isbn
		FROM
		bookread
		INNER JOIN book
		ON bookread.isbn = book.isbn
		WHERE
		bookread.userNo = #{userno} AND
		bookread.value > 6
		ORDER BY
		bookread.reg_date DESC,
		bookread.value
		DESC
		LIMIT 1;

	</select>
	
	<select id="selectinterestedOne"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.Book"
		resultMap="bookMap">
		SELECT
		book.categoryId,
		book.isbn
		FROM
		bookinterested
		INNER JOIN book
		ON bookinterested.isbn = book.isbn
		WHERE
		bookinterested.userNo = #{userno}
		ORDER BY
		rand()
		LIMIT 1;
	</select>
	
	<select id="selectinterestedCate"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.Book"
		resultMap="bookMap">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->

		select isbn, cover from book
		where categoryId=#{categoryId} and isbn!=#{isbn}
		order by rand() limit 24;
	</select>
	
	<select id="selectValueList"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.Book"
		resultMap="bookMap">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->

		select book.isbn,book.cover from bookread inner join book on bookread.isbn= book.isbn group by isbn order by (count(*))desc, avg(value) desc limit 24;
	</select>
</mapper>